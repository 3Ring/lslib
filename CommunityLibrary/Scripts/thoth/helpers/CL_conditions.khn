function CL_AttackIsSpell(context)
  return AttackType == (context.HitDescripton.AttackType.MeleeSpellAttack or AttackType.RangedSpellAttack)
end

function CL_ActiveWeaponHasStatus(statusName)
  return HasStatus(statusName, GetActiveWeapon())
end

-- Needs Rework as it has nothing to do with Status now - also crashes the game at start oops
--[[
function CL_IsInArray(arr, entity)
  for arrayItem in arr do
    if HasStatus(arrayItem, entity)
      return true
    end
  end

  return false
end
]]--

-- Optional Replacement for HasPactWeapon(), if support is needed for PACT_BLADE variants
function CL_HasPactWeapon(entity, mainHand)
    local entity = entity or context.Source
    local weaponEntity = GetActiveWeapon(entity, true)
    if weaponEntity.IsValid then
        result = Character(entity) & HasAnyStatus({'CL_PACT_BLADE_STR','CL_PACT_BLADE_DEX','CL_PACT_BLADE_CON','CL_PACT_BLADE_INT','CL_PACT_BLADE_WIS','PACT_BLADE'}, {}, {}, weaponEntity)
        return ConditionResult(result.Result, {ConditionError("HasNotPactWeapon")}, {ConditionError("HasPactWeapon")})
    end
    return ConditionResult(false, {ConditionError("HasNotPactWeapon")}, {ConditionError("HasPactWeapon")})
end
